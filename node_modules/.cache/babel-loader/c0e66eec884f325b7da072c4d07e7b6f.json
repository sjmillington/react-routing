{"ast":null,"code":"import _objectSpread from \"/home/sam/react/routing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/sam/react/routing/src/containers/Posts/Posts.js\";\nimport React, { Component } from 'react';\nimport axios from '../../axios';\nimport Post from '../../components/Post/Post';\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostId: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('/posts').then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatedPosts = posts.map(post => {\n        return _objectSpread({}, post, {\n          author: 'Max'\n        });\n      });\n      this.setState({\n        posts: updatedPosts\n      }); // console.log( response );\n    }).catch(error => {// console.log(error);\n      //this.setState({error: true});\n    });\n  }\n\n  render() {\n    let posts = React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Something went wrong!\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return React.createElement(Post, {\n          key: post.id,\n          title: post.title,\n          author: post.author,\n          clicked: () => this.postSelectedHandler(post.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, posts);\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/home/sam/react/routing/src/containers/Posts/Posts.js"],"names":["React","Component","axios","Post","Posts","state","posts","postSelectedHandler","id","setState","selectedPostId","componentDidMount","get","then","response","data","slice","updatedPosts","map","post","author","catch","error","render","textAlign","title"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAGA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BI,KAF0B,GAElB;AACJC,MAAAA,KAAK,EAAE;AADH,KAFkB;;AAAA,SAyB1BC,mBAzB0B,GAyBHC,EAAD,IAAQ;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEF;AAAjB,OAAd;AACH,KA3ByB;AAAA;;AAM1BG,EAAAA,iBAAiB,GAAI;AACjBT,IAAAA,KAAK,CAACU,GAAN,CAAW,QAAX,EACKC,IADL,CACWC,QAAQ,IAAI;AACf,YAAMR,KAAK,GAAGQ,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAd;AACA,YAAMC,YAAY,GAAGX,KAAK,CAACY,GAAN,CAAUC,IAAI,IAAI;AACnC,iCACOA,IADP;AAEIC,UAAAA,MAAM,EAAE;AAFZ;AAIH,OALoB,CAArB;AAMA,WAAKX,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEW;AAAR,OAAd,EARe,CASf;AACH,KAXL,EAYKI,KAZL,CAYWC,KAAK,IAAI,CACZ;AACA;AACH,KAfL;AAgBH;;AAQDC,EAAAA,MAAM,GAAE;AACJ,QAAIjB,KAAK,GAAG;AAAG,MAAA,KAAK,EAAE;AAACkB,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AACA,QAAI,CAAC,KAAKnB,KAAL,CAAWiB,KAAhB,EAAuB;AACnBhB,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqBC,IAAI,IAAI;AACjC,eAAO,oBAAC,IAAD;AACH,UAAA,GAAG,EAAEA,IAAI,CAACX,EADP;AAEH,UAAA,KAAK,EAAEW,IAAI,CAACM,KAFT;AAGH,UAAA,MAAM,EAAEN,IAAI,CAACC,MAHV;AAIH,UAAA,OAAO,EAAE,MAAM,KAAKb,mBAAL,CAAyBY,IAAI,CAACX,EAA9B,CAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,OANO,CAAR;AAOH;;AAED,WACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACSF,KADT,CADJ;AAKH;;AAhDyB;;AAoD9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport axios from '../../axios'\nimport Post from '../../components/Post/Post'\n\n\nclass Posts extends Component {\n\n    state = {\n        posts: [],\n    }\n\n    componentDidMount () {\n        axios.get( '/posts' )\n            .then( response => {\n                const posts = response.data.slice(0, 4);\n                const updatedPosts = posts.map(post => {\n                    return {\n                        ...post,\n                        author: 'Max'\n                    }\n                });\n                this.setState({posts: updatedPosts});\n                // console.log( response );\n            } )\n            .catch(error => {\n                // console.log(error);\n                //this.setState({error: true});\n            });\n    }\n\n    postSelectedHandler = (id) => {\n        this.setState({selectedPostId: id});\n    }\n\n    \n\n    render(){\n        let posts = <p style={{textAlign: 'center'}}>Something went wrong!</p>;\n        if (!this.state.error) {\n            posts = this.state.posts.map(post => {\n                return <Post \n                    key={post.id} \n                    title={post.title} \n                    author={post.author}\n                    clicked={() => this.postSelectedHandler(post.id)} />;\n            });\n        }\n\n        return (\n            <section className=\"Posts\">\n                    {posts}\n            </section>\n        )\n    }\n\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}